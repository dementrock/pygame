Pygame-ctypes 0.10
------------------
 - Fixed unset colorkey with Surface.set_colorkey
 - Performance of simple (non error-checking) SDL/pygame functions improved
 - Software blitting BGR surfaces corrected.
 - Ignore error if default icon not found.
 - Fixed blend blit to 24-bit surface
 - Undocumented Rect.w and .h attributes added.
 - Undocumented allow False for pygame.mixer.init arguments
 - pygame.error thrown from pygame.music.load instead of SDL_Exception
 - Allow comparison of Rect with None
 - pygame.transform.rotozoom of 24-bit and 16-bit surface returns 32-bit
   surface.
 - pygame.Surface.set_alpha with 0 value fixed
 - pygame.display.set_palette fixed
 - pygame.font.Font.render blended zero-length string has alpha channel
 - pygame.music.unpause() fixed.
 - pygame.mouse.set_pos accepts a tuple argument
 - pygame.surfarray.array_colorkey mask was inverted; fixed

Pygame-ctypes 0.09
------------------
 - pygame.mixer.Channel.get/set_endevent fixed
 - pygame.mixer endevent callback fixed
 - pygame.draw.circle correct box for given radius
 - 24-bit surface to RGBX string supported if no color key is set
 - user post event fix for ctypes 1.0.0
 - Return value of pygame.mouse.get_cursor fixed
 - Support for setuptools in pkgdata.py (allow resources from .egg or .zip)

SDL-ctypes 0.09
---------------
 - No changes, just a version push to keep sync with Pygame-ctypes.

Pygame-ctypes 0.08
------------------
 - Filled ellipse does not hang when rx or ry == 0
 - Allow rotozoom on 24 bit surfaces
 - Rect.topleft.set fixed
 - transform.rotate on big endian fixed
 - Workaround for TTF_RenderText_Solid not working on OS X

SDL-ctypes 0.08
---------------
 - Meaningful exception raised when library not loaded

Pygame-ctypes 0.07
------------------
 - SDL_INIT_NOPARACHUTE init flag passed
 - Many functions now silently downcast floats to ints (yuk)
 - Added pygame_icon.bmp, missing from previous distribution
 - Added freesansbold.ttf, missing from previous distribution
 - pygame.display.update() no longer confuses a length-2 list of
   rects with a rect of two tuples.
 - Added 'x' and 'y' properties to Rect
 - Fix typemask list argument in event functions
 - 'dict' attribute added to Event 
 - Fix user-posted event handling
 - Fix pygame.Surface.subsurface
 - Fix pygame.key.get_mods
 - Add KMOD_* constants
 - Allow (but ignore) keyword arguments to Font initializer
 - Cleanup module namespace in pygame.draw

SDL-ctypes 0.07
---------------
 - SDL_Surface free'd when pygame.Surface deleted
 - Null callbacks permitted
 - Extra refs for all callbacks kept to prevent unexpected segfaults when
   anonymous functions are collected.
 - None allowed as shape argument to array methods, rather than segfaulting

Pygame-ctypes 0.06
------------------
 - Initial release (version numbering coincides with SDL-ctypes release).

SDL-ctypes 0.06
---------------
 - Python 2.3 support
 - Fixes to SDL_sound
 - Added playsound_simple test
 - Fixed pitch bug in pixels_numpy.py and added event loop
 - Added interop_pil and interop_pil2 tests; demonstrating interoperability
   with PIL.

SDL-ctypes 0.05
---------------
 - Darwin support:
    - locate the SDL framework before passing to ctypes
    - Use RTLD_GLOBAL to workaround ctypes on Panther bug
    - Connect to window manager before SDL_Init(SDL_INIT_VIDEO) 
        - requires PyObjC
 - Added SDL.endian submodule
 - Pitch calculated correctly for returning SDL_Surface.pixels
 - SDL_WM_SetCaption and SDL_WM_GetCaption accept and return Unicode strings.
 - Removed SDL_opengl.h from SDL.constants
 - Added SDL_CreateCursor.
 - Documented struct classes
 - Added SDL_sound (untested)

SDL-ctypes 0.04
---------------
 - Support for 1 bit depth surfaces.
 - Ported all relevant SDL tests.
 - Removed unit/ directory; all tests will reside in test/.
 - Added SDL_GL_GetAttribute
 - Added to_string method in SDL_array
 - Removed read-only check from SDL_PixelFormat
 - Added pixel and bitfield access to SDL_Overlay
 - SDL_Timer allows timer to be disabled by setting the callback to None
 - Implemented SDL_WM_SetIcon
 - Fixed SDL_SetEventFilter callback
 - Fixed SDL_Surface.pixels size to respect pitch rather than width
 - SDL.dll refactored into a class, so it can be used for any SDL-like
   library (i.e., SDL_image, SDL_ttf, etc)
 - SDL.dll no longer requires a version function to load, will presume
   version 0.0.0 if unversioned (needed for SDL_image).
 - Added SDL_ttf and SDL_mixer support
 - Added as_int16 and as_int32 methods to SDL_array.
 - Support for SDL 1.2.11 (no API change)

SDL-ctypes 0.03
---------------
 - Set func_name instead of __name__ in `SDL.dll.function`; this should
   fix an error about __name__ being unwriteable in OS X (untested).
 - Provide access to unpythonified functions via _SDL_PeepEvents etc,
   rather  than SDL.dll._dll.SDL_PeepEvents.  This is cleaner, and sets
   things up for a unified compatibility mechanism.
 - `since` argument added to `SDL.dll.function` to specify minimum version
   of loaded library.
 - support/prep_doc.py now ignores private functions marked with "_"
 - version support for 1.2.1 to 1.2.10
        since 1.2.7:
            SDL_RWFromConstMem added
        since 1.2.10:
            SDL_WM_SetCaption unicode arguments
            SDL_VideoInfo window size attributes
            SDL_GetKeyRepeat added
 - SDL.array module added
 - SDL.video functions modified to accept and return SDL.array.SDL_array,
   numpy arrays or any other sequence.
 - Implemented SDL_CreateRGSurfaceFrom
 - added test programs test/testpalette.py and test/testgamma.py
 - filled holes in test/testvidinfo.py
 - __copy__ and __deepcopy__ methods added to SDL_Colour and SDL_Rect
 - Constants and enums in keysym.py moved into constants.py
 - SDL_keysym.unicode is now a unicode string type, not integer
