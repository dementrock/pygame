<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE module [
<!ELEMENT module (short, desc, (func|class)*)>
<!ATTLIST module name CDATA #REQUIRED>
<!ELEMENT short (#PCDATA)>
<!ELEMENT desc (#PCDATA)>
<!ELEMENT call (#PCDATA)>
<!ELEMENT func (call, desc)>
<!ATTLIST func name CDATA #REQUIRED>
<!ELEMENT class (constructor, desc, (attr|method)*)>
<!ATTLIST class name CDATA #REQUIRED>
<!ELEMENT constructor (#PCDATA)>
<!ELEMENT attr (#PCDATA)>
<!ATTLIST attr name CDATA #REQUIRED>
<!ELEMENT method (call, desc)>
<!ATTLIST method name CDATA #REQUIRED>
]>

<module name="pygame2.sdlext.draw">
  <short>extended SDL drawing methods</short>
  <desc>Extension module containing simple 2D drawing methods for the pygame2
    SDL modules. Several methods utilise code from the SDL_gfx library, and 
    were optimised and changed in several ways.
   </desc>

  <func name="aaline">
    <call>aaline (surface, color, (x1, y1), (x2, y2) [, blend]) -> Rect</call>
    <desc>Draws a fine anti-aliased line.
      
      Draws an anti-aliased line on a surface. This will respect the
      clipping rectangle. A bounding box of the affected area is returned
      as a rectangle. If blend is true, the shades will be be blended with
      existing pixel shades instead of overwriting them.
    </desc>
  </func>
  <func name="aalines">
    <call></call>
    <desc></desc>
  </func>
  <func name="aapolygon">
    <call></call>
    <desc></desc>
  </func>
  <func name="arc">
    <call></call>
    <desc></desc>
  </func>
  <func name="circle">
    <call></call>
    <desc></desc>
  </func>
  <func name="ellipse">
    <call></call>
    <desc></desc>
  </func>
  <func name="line">
    <call>line (surface, color, (x1, y1), (x2, y2) [, width]) -> Rect</call>
    <desc>Draws a straight line segment on a surface.

      Draws a straight line segment on a surface with an optionally specified
      line width. If the width argument is omitted, the line will be 1px thick.
      There are no endcaps, the ends are squared off for thick lines.
    </desc>
  </func>
  <func name="lines">
    <call></call>
    <desc></desc>
  </func>
  <func name="polygon">
    <call></call>
    <desc></desc>
  </func>
  <func name="rect">
    <call></call>
    <desc></desc>
  </func>
</module>

