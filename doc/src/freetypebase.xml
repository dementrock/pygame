<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE module SYSTEM "api.dtd">

<module name="pygame2.freetype.base">
  <alias>pygame2.freetype</alias>
  <short>Wrapping module for the FreeType 2 font library</short>
  <desc>
      This module wraps the FreeType 2 font library to add
      improvent font drawing capabilities to PyGame2, such as
      new font formats, etc.
  
    All classes and functions listed here are incorporated from the
    :mod:`pygame2.freetype.base` module.
  </desc>

  <func name="get_version">
    <call>get_version () -> tuple</call>
    <desc>
        Gets the version of the FreeType2 library which was used to build
        the 'freetype' module.
    </desc>
  </func>
  <func name="init">
    <call>init () -> None</call>
    <desc>
      Initializes the underlying FreeType 2 library.
      This method must be called before trying to use any of the functionality
      of the 'freetype' module.
    </desc>
  </func>
  <func name="quit">
    <call>quit () -> None</call>
    <desc>
      Shuts down the underlying FreeType 2 library.

      After calling this function, you should not invoke any class,
      method or function related to the 'freetype' module as they are likely to
      fail or might give unpredictable results.
    </desc>
  </func>
  <func name="was_init">
    <call>was_init () -> bool</call>
    <desc>
      Returns whether the the FreeType 2 library is initialized.
    </desc>
  </func>


  <class name="Font">
    <constructor>Font(file [, index]) -> Font</constructor>
    <desc>
        Creates a new Font from a supported font file.

        *TODO*
    </desc>
    <attr name="name">
      <desc>Gets the name of the font face.</desc>
    </attr>
    <method name="get_size">
      <call>get_size(pt, text) -> int, int</call>
      <desc>
          Gets the size which 'text' will occupy when rendered using 
          this Font.
      </desc>
    </method>
    <method name="get_metrics">
      <call>get_metrics(pt, text) -> [(int, int, int ...), ...]</call>
      <desc>
          Returns the glyph metrics for each character in 'text'.
      </desc>
    </method>
    <attr name="height">
      <desc>Gets the height of the Font.</desc>
    </attr>
    <method name="render">
      <call>render(text, fgcolor[, bgcolor, renderflag]) -> Surface</call>
      <desc>
        Renders a text to a Surface.

        *TODO*
      </desc>
    </method>
    <attr name="style">
      <desc>Gets or sets the style of the font. *TODO*</desc>
    </attr>
    <attr name="fixed_width">
      <desc>Returns whether this font is a fixed-width (bitmap) font</desc>
    </attr>
  </class>
  
</module>

