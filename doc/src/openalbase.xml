<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE module SYSTEM "api.dtd">

<module name="pygame2.openal.base">
  <alias>pygame2.openal</alias>
  <short>basic OpenAL wrapper module</short>
  <desc>
    Basic Pygame2 OpenAL wrapper module.

    Identifiers for the property get and set methods:
    
    +------+------------------------------------------------------------+
    | 'b'  | Get or set a single boolean value (e.g. AL_TRUE)           |
    +------+------------------------------------------------------------+
    | 'ba' | Get or set an array of boolean values. The array can be    |
    |      | any type of sequence containing matching values.           |
    +------+------------------------------------------------------------+
    | 'i'  | Get or set a single integer value.                         |
    +------+------------------------------------------------------------+
    | 'i3' | Get or set an triplet of integer values. The array can be  |
    |      | any type of sequence containing matching values.           |
    +------+------------------------------------------------------------+
    | 'ia' | Get or set an array of integer values. The array can be    |
    |      | any type of sequence containing matching values.           |
    +------+------------------------------------------------------------+
    | 'f'  | Get or set a single floating point value.                  |
    +------+------------------------------------------------------------+
    | 'f3' | Get or set an triplet of floating point values. The array  |
    |      | can be any type of sequence containing matching values.    |
    +------+------------------------------------------------------------+
    | 'fa' | Get or set an array of floating point values. The array    |
    |      | can be any type of sequence containing matching values.    |
    +------+------------------------------------------------------------+
    | 'd'  | Get or set a single double precision floating point value. |
    +------+------------------------------------------------------------+
    | 'da' | Get or set an array of double precision floating point     |
    |      | values. The array can be any type of sequence containing   |
    |      | matching values.                                           |
    +------+------------------------------------------------------------+
  </desc>

  <class name="Buffers">
    <constructor>Buffers () -> NotImplementedError</constructor>
    <desc>
      Buffers objects are used by OpenAL to buffer and provide PCM data
      for playback, recording and manipulation.
      
      The Buffers object provides methods and properties to manipulate
      certain aspects of the buffered data and can be queued to multiple
      sources within the same context.

      Buffers instances cannot be created directly, but are bound to a
      :class:`Device`. To create a Buffers instance for the currently
      active :class:`Device`, use the :meth:`Context.create_buffers`
      method.
    </desc>
    <example></example>
    <method name="buffer_data">
      <call>buffer_data (bufnum, format, data, samplerate)</call>
      <desc>
        Buffers a chunk of *data* into one of the created buffers.
      </desc>
      <example></example>
    </method>
    <attr name="buffers">
      <desc>The buffer identifiers used in the Buffers instance.</desc>
      <example></example>
    </attr>
    <attr name="count">
      <desc>The number of buffers.</desc>
      <example></example>
    </attr>
    <method name="get_prop">
      <call>get_prop (bufnum, prop, type) -> value or (value, ...) </call>
      <desc>
        Retrieves the value(s) of an OpenAL property for the Buffers.
      </desc>
      <example></example>
    </method>
    <method name="set_prop">
      <call>set_prop (</call>
      <desc></desc>
      <example></example>
    </method>
  </class>

  <class name="CaptureDevice">
    <constructor>CaptureDevice ()</constructor>
    <desc>None</desc>
    <example></example>
    <attr name="format">
      <desc>None</desc>
      <example></example>
    </attr>
    <attr name="frequency">
      <desc>None</desc>
      <example></example>
    </attr>
    <method name="get_samples">
      <call>get_samples ()</call>
      <desc></desc>
      <example></example>
    </method>
    <attr name="size">
      <desc>None</desc>
      <example></example>
    </attr>
    <method name="start">
      <call>start ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="stop">
      <call>stop ()</call>
      <desc></desc>
      <example></example>
    </method>
  </class>

  <class name="Context">
    <constructor>Context ()</constructor>
    <desc>None</desc>
    <example></example>
    <method name="create_buffers">
      <call>create_buffers ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="create_sources">
      <call>create_sources ()</call>
      <desc></desc>
      <example></example>
    </method>
    <attr name="device">
      <desc>None</desc>
      <example></example>
    </attr>
    <method name="disable">
      <call>disable ()</call>
      <desc></desc>
      <example></example>
    </method>
    <attr name="distance_model">
      <desc>None</desc>
      <example></example>
    </attr>
    <attr name="doppler_factor">
      <desc>None</desc>
      <example></example>
    </attr>
    <method name="enable">
      <call>enable ()</call>
      <desc></desc>
      <example></example>
    </method>
    <attr name="is_current">
      <desc>None</desc>
      <example></example>
    </attr>
    <method name="is_enabled">
      <call>is_enabled ()</call>
      <desc></desc>
      <example></example>
    </method>
    <attr name="listener">
      <desc>None</desc>
      <example></example>
    </attr>
    <method name="make_current">
      <call>make_current ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="process">
      <call>process ()</call>
      <desc></desc>
      <example></example>
    </method>
    <attr name="speed_of_sound">
      <desc>None</desc>
      <example></example>
    </attr>
    <method name="suspend">
      <call>suspend ()</call>
      <desc></desc>
      <example></example>
    </method>
  </class>

  <class name="Device">
    <constructor>Device ()</constructor>
    <desc>None</desc>
    <example></example>
    <attr name="extensions">
      <desc>None</desc>
      <example></example>
    </attr>
    <method name="get_enum_value">
      <call>get_enum_value ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="get_error">
      <call>get_error ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="has_extension">
      <call>has_extension</call>
      <desc></desc>
      <example></example>
    </method>
    <attr name="name">
      <desc>None</desc>
      <example></example>
    </attr>
  </class>

  <class name="Listener">
    <constructor>Listener</constructor>
    <desc>None</desc>
    <example></example>
    <method name="get_prop">
      <call>get_prop ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="set_prop">
      <call>set_prop ()</call>
      <desc></desc>
      <example></example>
    </method>
  </class>

  <class name="Sources">
    <constructor>Sources</constructor>
    <desc>None</desc>
    <example></example>
    <attr name="count">
      <desc>None</desc>
      <example></example>
    </attr>
    <method name="get_prop">
      <call>get_prop ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="pause">
      <call>pause ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="play">
      <call>play ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="queue_buffers">
      <call>queue_buffers ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="rewind">
      <call>rewind ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="set_prop">
      <call>set_prop ()</call>
      <desc></desc>
      <example></example>
    </method>
    <attr name="sources">
      <desc>None</desc>
      <example></example>
    </attr>
    <method name="stop">
      <call>stop ()</call>
      <desc></desc>
      <example></example>
    </method>
    <method name="unqueue_buffers">
      <call>unqueue_buffers ()</call>
      <desc></desc>
      <example></example>
    </method>
  </class>

  <func name="al_get_string">
    <call>al_get_string ()</call>
    <desc></desc>
    <example></example>
  </func>
  <func name="get_default_capture_device_name">
    <call>get_default_capture_device_name ()</call>
    <desc></desc>
    <example></example>
  </func>
  <func name="get_default_output_device_name">
    <call>get_default_output_device_name ()</call>
    <desc></desc>
    <example></example>
  </func>
  <func name="get_enum_value">
    <call>get_enum_value ()</call>
    <desc></desc>
    <example></example>
  </func>
  <func name="get_error">
    <call>get_error ()</call>
    <desc></desc>
    <example></example>
  </func>
  <func name="init">
    <call>init ()</call>
    <desc></desc>
    <example></example>
  </func>
  <func name="is_extension_present">
    <call>is_extension_present ()</call>
    <desc></desc>
    <example></example>
  </func>
  <func name="list_capture_devices">
    <call>list_capture_devices ()</call>
    <desc></desc>
    <example></example>
  </func>
  <func name="list_output_devices">
    <call>list_output_devices</call>
    <desc></desc>
    <example></example>
  </func>
  <func name="quit">
    <call>quit ()</call>
    <desc></desc>
    <example></example>
  </func>
  <func name="set_current_context">
    <call>set_current_context ()</call>
    <desc></desc>
    <example></example>
  </func>
</module>

